import "core-js/modules/es.array.push.js";
import "core-js/modules/es.array.with.js";
import "core-js/modules/es.array-buffer.detached.js";
import "core-js/modules/es.array-buffer.transfer.js";
import "core-js/modules/es.array-buffer.transfer-to-fixed-length.js";
import "core-js/modules/es.map.group-by.js";
import "core-js/modules/es.object.group-by.js";
import "core-js/modules/es.promise.with-resolvers.js";
import "core-js/modules/es.set.difference.v2.js";
import "core-js/modules/es.set.intersection.v2.js";
import "core-js/modules/es.set.is-disjoint-from.v2.js";
import "core-js/modules/es.set.is-subset-of.v2.js";
import "core-js/modules/es.set.is-superset-of.v2.js";
import "core-js/modules/es.set.symmetric-difference.v2.js";
import "core-js/modules/es.set.union.v2.js";
import "core-js/modules/es.string.is-well-formed.js";
import "core-js/modules/es.string.to-well-formed.js";
import "core-js/modules/es.typed-array.to-reversed.js";
import "core-js/modules/es.typed-array.to-sorted.js";
import "core-js/modules/es.typed-array.with.js";
import "core-js/modules/esnext.suppressed-error.constructor.js";
import "core-js/modules/esnext.array.group-by.js";
import "core-js/modules/esnext.array.group-by-to-map.js";
import "core-js/modules/esnext.array.is-template-object.js";
import "core-js/modules/esnext.array.unique-by.js";
import "core-js/modules/esnext.async-disposable-stack.constructor.js";
import "core-js/modules/esnext.async-iterator.constructor.js";
import "core-js/modules/esnext.async-iterator.async-dispose.js";
import "core-js/modules/esnext.async-iterator.drop.js";
import "core-js/modules/esnext.async-iterator.every.js";
import "core-js/modules/esnext.async-iterator.filter.js";
import "core-js/modules/esnext.async-iterator.find.js";
import "core-js/modules/esnext.async-iterator.flat-map.js";
import "core-js/modules/esnext.async-iterator.for-each.js";
import "core-js/modules/esnext.async-iterator.from.js";
import "core-js/modules/esnext.async-iterator.indexed.js";
import "core-js/modules/esnext.async-iterator.map.js";
import "core-js/modules/esnext.async-iterator.reduce.js";
import "core-js/modules/esnext.async-iterator.some.js";
import "core-js/modules/esnext.async-iterator.take.js";
import "core-js/modules/esnext.async-iterator.to-array.js";
import "core-js/modules/esnext.bigint.range.js";
import "core-js/modules/esnext.data-view.get-float16.js";
import "core-js/modules/esnext.data-view.get-uint8-clamped.js";
import "core-js/modules/esnext.data-view.set-float16.js";
import "core-js/modules/esnext.data-view.set-uint8-clamped.js";
import "core-js/modules/esnext.disposable-stack.constructor.js";
import "core-js/modules/esnext.function.demethodize.js";
import "core-js/modules/esnext.function.is-constructor.js";
import "core-js/modules/esnext.function.metadata.js";
import "core-js/modules/esnext.function.un-this.js";
import "core-js/modules/esnext.iterator.constructor.js";
import "core-js/modules/esnext.iterator.dispose.js";
import "core-js/modules/esnext.iterator.drop.js";
import "core-js/modules/esnext.iterator.filter.js";
import "core-js/modules/esnext.iterator.for-each.js";
import "core-js/modules/esnext.iterator.from.js";
import "core-js/modules/esnext.iterator.indexed.js";
import "core-js/modules/esnext.iterator.map.js";
import "core-js/modules/esnext.iterator.range.js";
import "core-js/modules/esnext.iterator.take.js";
import "core-js/modules/esnext.iterator.to-array.js";
import "core-js/modules/esnext.json.is-raw-json.js";
import "core-js/modules/esnext.json.parse.js";
import "core-js/modules/esnext.json.raw-json.js";
import "core-js/modules/esnext.map.delete-all.js";
import "core-js/modules/esnext.map.emplace.js";
import "core-js/modules/esnext.map.every.js";
import "core-js/modules/esnext.map.filter.js";
import "core-js/modules/esnext.map.find.js";
import "core-js/modules/esnext.map.find-key.js";
import "core-js/modules/esnext.map.includes.js";
import "core-js/modules/esnext.map.key-of.js";
import "core-js/modules/esnext.map.map-keys.js";
import "core-js/modules/esnext.map.map-values.js";
import "core-js/modules/esnext.map.merge.js";
import "core-js/modules/esnext.map.reduce.js";
import "core-js/modules/esnext.map.some.js";
import "core-js/modules/esnext.map.update.js";
import "core-js/modules/esnext.math.f16round.js";
import "core-js/modules/esnext.math.sum-precise.js";
import "core-js/modules/esnext.number.range.js";
import "core-js/modules/esnext.regexp.escape.js";
import "core-js/modules/esnext.set.add-all.js";
import "core-js/modules/esnext.set.delete-all.js";
import "core-js/modules/esnext.set.difference.js";
import "core-js/modules/esnext.set.every.js";
import "core-js/modules/esnext.set.filter.js";
import "core-js/modules/esnext.set.find.js";
import "core-js/modules/esnext.set.intersection.js";
import "core-js/modules/esnext.set.is-disjoint-from.js";
import "core-js/modules/esnext.set.is-subset-of.js";
import "core-js/modules/esnext.set.is-superset-of.js";
import "core-js/modules/esnext.set.join.js";
import "core-js/modules/esnext.set.map.js";
import "core-js/modules/esnext.set.reduce.js";
import "core-js/modules/esnext.set.some.js";
import "core-js/modules/esnext.set.symmetric-difference.js";
import "core-js/modules/esnext.set.union.js";
import "core-js/modules/esnext.string.dedent.js";
import "core-js/modules/esnext.symbol.async-dispose.js";
import "core-js/modules/esnext.symbol.custom-matcher.js";
import "core-js/modules/esnext.symbol.is-registered-symbol.js";
import "core-js/modules/esnext.symbol.is-registered.js";
import "core-js/modules/esnext.symbol.is-well-known-symbol.js";
import "core-js/modules/esnext.symbol.is-well-known.js";
import "core-js/modules/esnext.symbol.matcher.js";
import "core-js/modules/esnext.symbol.metadata.js";
import "core-js/modules/esnext.typed-array.filter-reject.js";
import "core-js/modules/esnext.typed-array.group-by.js";
import "core-js/modules/esnext.typed-array.to-spliced.js";
import "core-js/modules/esnext.typed-array.unique-by.js";
import "core-js/modules/esnext.uint8-array.from-base64.js";
import "core-js/modules/esnext.uint8-array.from-hex.js";
import "core-js/modules/esnext.uint8-array.to-base64.js";
import "core-js/modules/esnext.uint8-array.to-hex.js";
import "core-js/modules/esnext.weak-map.emplace.js";
import "core-js/modules/web.dom-exception.stack.js";
import "core-js/modules/web.structured-clone.js";
import "core-js/modules/web.url.can-parse.js";
import "core-js/modules/web.url.parse.js";
import "core-js/modules/web.url-search-params.delete.js";
import "core-js/modules/web.url-search-params.has.js";
import "core-js/modules/web.url-search-params.size.js";
[].findLast(fn);
[].findLastIndex(fn);
[].asIndexedPairs();
Iterator.from({
  next: () => ({
    done: Math.random() > .9,
    value: Math.random() * 10 | 0
  })
}).forEach(console.log).toArray();
AsyncIterator.from([1, 2, 3, 4, 5, 6, 7]).drop(1).take(5).filter(it => it % 2).groupBy(it => id % 4).map(it => it ** 2).toArray().then(console.log);
[1, 2, 3, 4, 5, 6, 7, 7].uniqueBy(x => x).groupBy(x => x % 2);
Number.range(1, 2);
BigInt.range(1n, 2n);
Array.isTemplateObject((x => x)`a${x}z`);
new Map([['x', 1]]).emplace('x', {
  update: x => x + 1,
  insert: () => 0
});
/x/.dotAll;
/x/.sticky;
Symbol.asyncDispose;
Symbol.matcher;
Symbol.matchAll;
Symbol.metadata;
Symbol.replaceAll;
new URL(url);
const foo = [1, 2, 3].groupByToMap(bar);
const push = [].push.unThis();
Function.isConstructor;
throw new DOMException();
structuredClone(72);
btoa('hi');
foo.indexed;
bar.with;
buz.push;
fuz.__proto__;
string.isWellFormed;
string.toWellFormed;
String.dedent`42`;
self;
SuppressedError;
DisposableStack;
AsyncDisposableStack;
Iterator.range(foo, bar);
JSON.parse(foo);
JSON.isRawJSON(foo);
JSON.rawJSON(foo);
Symbol.isWellKnown(foo);
Symbol.isRegistered(foo);
Function.demethodize();
new URLSearchParams(string).size;
new Set(array).intersection(otherSet);
URL.canParse(foo);
Symbol.isWellKnownSymbol(foo);
Symbol.isRegisteredSymbol(foo);
Symbol.metadata;
Object.groupBy(a, b);
Map.groupBy(a, b);
Promise.withResolvers();
new URLSearchParams().has(a, b);
Math.f16round(foo);
foo.getFloat16(0);
foo.setFloat16(0, 1);
foo.getUint8Clamped(0);
foo.setUint8Clamped(0, 1);
RegExp.escape(foo);
Uint8Array.fromBase64(string);
Uint8Array.fromHex(string);
new Uint8Array(foo).toBase64();
new Uint8Array(foo).toHex();
URL.parse(x);
Math.sumPrecise(x);
Symbol.customMatcher;
